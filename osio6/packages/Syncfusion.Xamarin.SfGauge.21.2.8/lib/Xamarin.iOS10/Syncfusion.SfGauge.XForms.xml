<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.SfGauge.XForms</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.SfGauge.XForms.GaugeAnnotation">
            <summary>
            Represents the gauge annotation. To render this annotation, create an instance <see cref="T:Syncfusion.SfGauge.XForms.GaugeAnnotation"/>, and set required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.GaugeAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.GaugeAnnotation"/> class. You can add custom view for gauge scale using gauge annotation.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.GaugeAnnotation.Angle">
            <summary>
            Gets or sets the angle value for circular gauge annotation. Angle is used to place the annotation with given angle.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.GaugeAnnotation.AngleProperty">
            <summary>
            Gets or sets the angle value for circular gauge annotation. Angle is used to place the annotation with given angle.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.GaugeAnnotation.Offset">
            <summary>
            Gets or sets the position of the annotation. It moves the view from the center to edge of the circular gauge. The value should range between 0 and 1.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.GaugeAnnotation.OffsetProperty">
            <summary>
            Gets or sets the position of the annotation. The property is used to move the view from the center to edge of the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.GaugeAnnotation.View">
            <summary>
            Gets or sets the view of the annotation. You can set different type of view for circular gauge annotation. 
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.GaugeAnnotation.ViewProperty">
            <summary>
            Gets or sets the view property of the annotation. You can set different type of view for circular gauge annotation.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.GaugeAnnotation.HorizontalAlignment">
            <summary>
            Gets or sets the HorizontalAlignment position of the annotation. It aligns the annotation to the start, center, or end in horizontal position.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.GaugeAnnotation.HorizontalAlignmentProperty">
            <summary>
            Gets or sets the HorizontalAlignment position of the annotation. It aligns the annotation to the start, center or end in horizontal position.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.GaugeAnnotation.VerticalAlignment">
            <summary>
            Gets or sets the VerticalAlignment position of the annotation. It aligns the annotation to the start, center, or end in vertical position.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.GaugeAnnotation.VerticalAlignmentProperty">
            <summary>
            Gets or sets the VerticalAlignment position of the annotation. It aligns the annotation to the start, center, or end in vertical position.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.GaugeAnnotation.ViewMargin">
            <summary>
            Gets or sets the ViewMargin of the annotation. This property is used to set margin for gauge annotation.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.GaugeAnnotation.ViewMarginProperty">
            <summary>
            Gets or sets the ViewMargin property of the annotation. This property is used to set margin for gauge annotation.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.CircularGaugeAnnotationCollection">
            <summary>
            Represents the circular gauge annotation collection. Create an instance "SfGauge.XForms.CircularGaugeAnnotationCollection", and set required properties.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.PointerType">
            <summary>
            Specifies the PointerTypes.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.PointerType.Bar">
            <summary>
            This returns Bar as pointerType
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.PointerType.Triangle">
            <summary>
            This returns Triangle as pointerType
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.GaugeType">
            <summary>
            Specifies the GaugeTypes.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.GaugeType.Default">
            <summary>
            This returns Default GaugeType
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.GaugeType.East">
            <summary>
            This returns East GaugeType
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.GaugeType.West">
            <summary>
            This returns West GaugeType
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.GaugeType.North">
            <summary>
            This returns North GaugeType
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.GaugeType.South">
            <summary>
            This returns South GaugeType
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.GaugeType.NorthEast">
            <summary>
            This returns NorthEast GaugeType
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.GaugeType.NorthWest">
            <summary>
            This returns NorthWest GaugeType
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.GaugeType.SouthEast">
            <summary>
            This returns SouthEast GaugeType
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.GaugeType.SouthWest">
            <summary>
            This returns SouthWest GaugeType
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.ScaleDirection">
            <summary>
            Specifies the Scale Direction.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.ScaleDirection.Clockwise">
            <summary>
            This returns Scale Direction
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.ScaleDirection.AntiClockwise">
            <summary>
            This returns Scale Diection
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.RangeCap">
            <summary>
            Specifies the range cap.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.RangeCap.Start">
            <summary>
            This returns start rangecap
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.RangeCap.End">
            <summary>
            This returns end rangecap
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.RangeCap.Both">
            <summary>
            This returns start and end rangecap
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.RangeCap.None">
            <summary>
            This returns default rangecap
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.MarkerShape">
            <summary>
            Specifies the marker shapes.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.MarkerShape.Circle">
            <summary>
            This returns Circle marker shape
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.MarkerShape.Diamond">
            <summary>
            This returns Diamond marker shape
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.MarkerShape.Image">
            <summary>
            This returns Image marker shape
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.MarkerShape.InvertedTriangle">
            <summary>
            This returns InvertedTriangle marker shape
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.MarkerShape.Triangle">
            <summary>
            This returns Triangle marker shape
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.MarkerShape.Rectangle">
            <summary>
            This returns Rectangle marker shape
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.GaugeGradientStop">
            <summary>
            Configures the properties of GaugeGradientStop. To render this GaugeGradientStop, create an instance of GaugeGradientStop class.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.GaugeGradientStop.ColorProperty">
            <summary>
            Gets or sets the color property of the range. You can customize the color for ranges. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.GaugeGradientStop.Color">
            <summary>
            Gets or sets the color of the range. You can customize the color for ranges. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="P:Syncfusion.SfGauge.XForms.GaugeGradientStop.Color"/> value.</value>
            <example>
            This sample shows how to set the gradient color of the range.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	Range range = new Range();
            	GaugeGradientStop gradientStop = new GaugeGradientStop();
            	gradientStop.Color = Color.Red;
            	range.GradientColor.Add(gradientStop)
            	scale.Ranges.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.GaugeGradientStop.ValueProperty">
            <summary>
            Gets or sets the gradient value property of the range. you can customize the gradient stop value for range. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.GaugeGradientStop.Value">
            <summary>
            Gets or sets the gradient value of the range. You can customize the gradient stop value for range. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the gradientValue of the range.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	Range range = new Range();
            	GaugeGradientStop gradientStop = new GaugeGradientStop();
            	gradientStop.Value = 10;
            	range.GradientColor.Add(gradientStop)
            	scale.Ranges.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.Header">
            <summary>
            Represents the gauge header. To render this header, create an instance of header class and set required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.Header.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.Header"/> class to set required header properties in circular gauge header.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Header.TextProperty">
            <summary>
            Gets or sets the text property of the header. It changes the circular gauge header text. This is bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Header.Text">
            <summary>
            Gets or sets the text of the header. It changes the circular gauge header text. This is a bindable property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Header.TextSizeProperty">
            <summary>
            Gets or sets the text size property of the header. It changes the circular gauge header text size. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Header.TextSize">
            <summary>
            Gets or sets the text size of the header. It changes the circular gauge header text size. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the TextSize of the header.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Header header = new Header();
            	header.TextSize = 20;
            	gauge.Headers.Add(header);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Header.FontProperty">
            <summary>
            Gets or sets the font of the header. It changes the gauge header size, font family, and font weight. This is bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Header.Font">
            <summary>
            Gets or sets the font of the header. This property changes the gauge header size, font family, and font weight.
            </summary>
            <value>This property takes the <see cref="P:Syncfusion.SfGauge.XForms.Header.Font"/> value.</value>
            <example>
            This sample shows how to set the Font of the header.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Header header = new Header();
            	header.Font = new Font();
            	gauge.Headers.Add(header);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Header.FontFamilyProperty">
            <summary>
            Gets or sets the font family of the text. This property changes the font family of header text in circular gauge. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Header.HorizontalHeaderPosition">
            <summary>
            Gets or sets the horizontal position of gauge header. This property customizes the gauge horizontal header position.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Header.HorizontalHeaderPositionProperty">
            <summary>
            Gets or sets the position of gauge header view. It customizes the gauge horizontal header position. This is bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Header.VerticalHeaderPosition">
            <summary>
            Gets or sets the vertical view position of gauge header. It customizes the gauge vertical header position. 
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Header.VerticalHeaderPositionProperty">
            <summary>
            Gets or sets the vertical position of gauge header view. It customizes the gauge vertical header position. This is bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Header.FontFamily">
            <summary>
            Gets or sets the font family of the text. It changes the font family of header text in circular gauge.
            </summary>
            <value>The font family of the text.</value>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Header.FontAttributesProperty">
            <summary>
            Gets or sets font attributes for the Header property. It changes the font style for the circular gauge header. This is bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Header.FontAttributes">
            <summary>
            Gets or sets font attributes for gauge Header. It changes the font style for the circular gauge header.
            </summary>
            <value>This property takes the <see cref="P:Syncfusion.SfGauge.XForms.Header.FontAttributes"/>value.</value> 
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Header.PositionProperty">
            <summary>
            Gets or sets the position of the header. It changes the horizontal and vertical positions of gauge header. This is bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Header.Position">
            <summary>
            Gets or sets the position of the header. It changes the horizontal and vertical positions of gauge header.
            </summary>
            <value>This property takes the <see cref="T:Xamarin.Forms.Point"/> value.</value>
            <example>
            This sample shows how to set the Position of the header.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Header header = new Header();
            	header.Position = new Point(0.5, 0.5);
            	gauge.Headers.Add(header);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Header.ForegroundColorProperty">
            <summary>
            Gets or sets the foreground color of the header. It changes the foreground color for circular gauge header. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Header.ForegroundColor">
            <summary>
            Gets or sets the foreground color of the header. It changes the foreground color for circular gauge header.
            </summary>
            <value>This property takes the <see cref="T:System.String"/> value.</value>
            <example>
            This sample shows how to set the ForegroundColor of the header.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Header header = new Header();
            	header.ForegroundColor = Color.Red;
            	gauge.Headers.Add(header);
            }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.Header.Syncfusion#XForms#Themes#IThemeElement#OnControlThemeChanged(System.String,System.String)">
            <summary>
            Called when control theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.Header.Syncfusion#XForms#Themes#IThemeElement#OnCommonThemeChanged(System.String,System.String)">
            <summary>
            Called when common theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.IGaugeEventDependencyService">
            <summary>
            Represents the gauge event dependency service. This interface allows apps to call into platform-specific functionality from shared code.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.IGaugeEventDependencyService.SubscribeLabelCreatedEvent(Syncfusion.SfGauge.XForms.Scale,System.Object)">
            <summary>
            To subscribe the label created event.
            </summary>
            <param name="scale">Scale.</param>
            <param name="nativeObject">Native Object.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.IGaugeEventDependencyService.UnSubscribeLabelCreatedEvent(Syncfusion.SfGauge.XForms.Scale,System.Object)">
            <summary>
            To unsubscribe the label subcribed event.
            </summary>
            <param name="scale">Scale.</param>
            <param name="nativeObject">Native Object.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.IGaugeEventDependencyService.GetStreamAsync(Syncfusion.SfGauge.XForms.SfCircularGauge)">
            <summary>
            This method is used to export the circular gauge as stream.
            </summary>
            <param name="gauge">It contains the circular gauge.</param>
            <returns>It will return the circular gauge as stream asynchronously.</returns>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.IGaugeEventDependencyService.SaveAsImage(System.String,Syncfusion.SfGauge.XForms.SfCircularGauge)">
            <summary>
            This method is used to save circular gauge as image.
            </summary>
            <param name="fileName">It contains the file name for the image.</param>
            <param name="gauge">It contains the circular gauge.</param>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.MarkerPointer">
            <summary>
            Represents the marker pointer. To render this pointer, create an instance of MarkerPointer class, and set required properties.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.MarkerPointer.MarkerShape">
            <summary>
            Gets or sets the type of marker pointer. It is used to customize the shapes of marker pointer. This is a bindable property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.MarkerPointer.MarkerShapeProperty">
            <summary>
            Gets or sets the type of the marker pointer property. It customizes the shapes of marker pointer. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.MarkerPointer.MarkerHeight">
            <summary>
            Gets or sets the height of the marker. It customizes the height for marker. This is a bindable property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.MarkerPointer.MarkerHeightProperty">
            <summary>
            Gets or sets the height property of the marker. It customizes the height for marker. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.MarkerPointer.MarkerWidth">
            <summary>
            Gets or sets the width of the marker. It customizes the width for marker. This is a bindable property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.MarkerPointer.MarkerWidthProperty">
            <summary>
            Gets or sets the width property of the marker. It customizes the width for marker. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.MarkerPointer.ImageSource">
            <summary>
            Gets or sets the source path for image symbol. It is used to set path of an image source for marker shapes.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.MarkerPointer.ImageSourceProperty">
            <summary>
            Gets or sets the source property path for image symbol. It sets path of an  image source for marker shapes.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.MarkerPointer.EnableDragging">
            <summary>
            Gets or sets a value that indicates whether the PointerDragging to be enabled for marker pointer. This is a bindable property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.MarkerPointer.EnableDraggingProperty">
            <summary>
             Gets or sets a value that indicates whether the PointerDragging property to be enabled for marker pointer. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.MarkerPointer.Offset">
            <summary>
            Gets or sets the position of marker pointer. It customizes the position for marker pointer by setting the offset value.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.MarkerPointer.OffsetProperty">
            <summary>
            Gets or sets the position of marker pointer. It customizes the position for marker pointer by setting the offset value of pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.MarkerPointer.StepFrequency">
            <summary>
            Gets or sets the snap value to the marker pointer. While dragging the pointer, it will move to next value based on step frequency value. Default value is 0. 
            </summary>
            <remarks> To drag with step frequency value, enable dragging support for pointer. </remarks>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.MarkerPointer.StepFrequencyProperty">
            <summary>
            Gets or sets the step frequency of marker pointer. It is used to snap the values while dragging the pointer.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.NeedlePointer">
            <summary>
            Represents the needle pointer. To render this pointer, create an instance of NeedlePointer class, and set required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.NeedlePointer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.NeedlePointer"/> class. You can customize the needle pointer using this instance.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.NeedlePointer.KnobRadiusProperty">
            <summary>
            Gets or sets the knob radius property of the needle pointer. It customizes the radius of needle pointer. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.NeedlePointer.KnobRadius">
            <summary>
            Gets or sets the knob radius of the needle pointer. It customizes the radius of needle pointer. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the KnobRadius of the needle pointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	NeedlePointer needlepointer = new NeedlePointer();
            	needlepointer.KnobRadius = 10;
            	scale.Pointers.Add(needlepointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.NeedlePointer.KnobColorProperty">
            <summary>
            Gets or sets the knob color of the needle pointer. It customizes the knob color of the needle pointer. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.NeedlePointer.KnobColor">
            <summary>
            Gets or sets the knob color of the needle pointer. It customizes the knob color of the needle pointer.
            </summary>
            <value>This property takes the <see cref="T:Xamarin.Forms.Color"/> value.</value>
            <example>
            This sample shows how to set the KnobColor of the needle pointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	NeedlePointer needlepointer = new NeedlePointer();
            	needlepointer.KnobColor = Color.Red;
            	scale.Pointers.Add(needlepointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.NeedlePointer.LengthFactorProperty">
            <summary>
            Gets or sets the length factor of the needle pointer. It customizes the length factor of needle pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.NeedlePointer.LengthFactor">
            <summary>
            Gets or sets the length factor of the needle pointer. It customizes the length factor of needle pointer. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the LengthFactor of the needle pointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	NeedlePointer needlepointer = new NeedlePointer();
            	needlepointer.LengthFactor = 0.8;
            	scale.Pointers.Add(needlepointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.NeedlePointer.TypeProperty">
            <summary>
            Gets or sets the pointer type of the needle pointer. It is used to customize the pointer type for needle pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.NeedlePointer.Type">
            <summary>
            Gets or sets the pointer type of the needle pointer. It customizes the pointer type for needle pointer. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:Syncfusion.SfGauge.XForms.PointerType"/> value.</value>
            <example>
            This sample shows how to set the PointerType of the needle pointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	NeedlePointer needlepointer = new NeedlePointer();
            	needlepointer.PointerType = Pointer.Bar;
            	scale.Pointers.Add(needlepointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.NeedlePointer.KnobRadiusFactorProperty">
            <summary>
            Gets or sets the knob radius factor of the needle pointer. It customizes the knob radius factor of needle pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.NeedlePointer.KnobRadiusFactor">
            <summary>
            Gets or sets the knob radius factor of the needle pointer. It customizes the knob radius factor of needle pointer. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the KnobRadiusFactor of the needle pointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	NeedlePointer needlepointer = new NeedlePointer();
            	needlepointer.KnobRadiusFactor = 0.1;
            	scale.Pointers.Add(needlepointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.NeedlePointer.KnobStrokeWidthProperty">
            <summary>
            Gets or sets the knob stroke width factor of the needle pointer. It customizes the stroke width of the knob.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.NeedlePointer.KnobStrokeWidth">
            <summary>
            Gets or sets the knob stroke width factor of the needle pointer. It customizes the stroke width of the knob. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the KnobStrokeWidth of the needle pointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	NeedlePointer needlepointer = new NeedlePointer();
            	needlepointer.KnobStrokeWidth = 2;
            	scale.Pointers.Add(needlepointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.NeedlePointer.KnobStrokeColorProperty">
            <summary>
            Gets or sets the knob stroke color of the needle pointer. It customizes the stroke color of the knob.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.NeedlePointer.KnobStrokeColor">
            <summary>
            Gets or sets the knob stroke color of the needle pointer. It customizes the stroke color of the knob. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:Xamarin.Forms.Color"/> value.</value>
            <example>
            This sample shows how to set the KnobStrokeColor of the needle pointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	NeedlePointer needlepointer = new NeedlePointer();
            	needlepointer.KnobStrokeColor = Color.Red;
            	scale.Pointers.Add(needlepointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.NeedlePointer.TailColorProperty">
            <summary>
            Gets or sets the tail color of the needle pointer. It customizes the color of the tail for needle pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.NeedlePointer.TailColor">
            <summary>
            Gets or sets the tail color of the needle pointer. It customizes the color of the tail. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:Xamarin.Forms.Color"/> value.</value>
            <example>
            This sample shows how to set the TailColor of the needle pointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	NeedlePointer needlepointer = new NeedlePointer();
            	needlepointer.TailColor = Color.Red;
            	scale.Pointers.Add(needlepointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.NeedlePointer.TailLengthFactorProperty">
            <summary>
            Gets or sets the tail length factor property of the needle pointer. It customizes the length factor of the tail for needle pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.NeedlePointer.TailLengthFactor">
            <summary>
            Gets or sets the tail length factor of the needle pointer. It customizes the length factor of the tail for needle pointer.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the TailLengthFactor of the needle pointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	NeedlePointer needlepointer = new NeedlePointer();
            	needlepointer.TailLengthFactor = 0.2;
            	scale.Pointers.Add(needlepointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.NeedlePointer.TailStrokeWidthProperty">
            <summary>
            Gets or sets the tail stroke width property factor of the needle pointer. It customizes the stroke width of the tail.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.NeedlePointer.TailStrokeWidth">
            <summary>
            Gets or sets the tail stroke width factor of the needle pointer. It customizes the stroke width of the tail.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the TailStrokeWidth of the needle pointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	NeedlePointer needlepointer = new NeedlePointer();
            	needlepointer.TailStrokeWidth = 2;
            	scale.Pointers.Add(needlepointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.NeedlePointer.TailStrokeColorProperty">
            <summary>
            Gets or sets the tail stroke color property of the needle pointer. It customizes the stroke color of the tail.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.NeedlePointer.TailStrokeColor">
            <summary>
            Gets or sets the tail stroke color of the needle pointer. It customizes the stroke color of the tail.
            </summary>
            <value>This property takes the <see cref="T:Xamarin.Forms.Color"/> value.</value>
            <example>
            This sample shows how to set the TailStrokeColor of the needle pointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	NeedlePointer needlepointer = new NeedlePointer();
            	needlepointer.TailStrokeColor = Color.Red;
            	scale.Pointers.Add(needlepointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.NeedlePointer.ThicknessProperty">
            <summary>
            Gets or sets the thickness property of the pointer. It customizes the thickness of pointer. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.NeedlePointer.Thickness">
            <summary>
            Gets or sets the thickness of the pointer. It customizes the thickness of pointer. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the Offset of the pointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	RangePointer rangePointer = new RangePointer();
            	rangePointer.Thickness = 10;
            	scale.Pointers.Add(rangePointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.NeedlePointer.EnableDragging">
            <summary>
            Gets or sets a value that indicates whether the PointerDragging to be enabled for needle pointer. This is a bindable property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.NeedlePointer.EnableDraggingProperty">
            <summary>
            Gets or sets a value that indicates whether the PointerDragging property to be enabled for needle pointer. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.NeedlePointer.StepFrequency">
            <summary>
            Gets or sets the snap value to the needle pointer. While dragging the pointer, it will move to next value based on step frequency value. Default value is 0. 
            </summary>
            <remarks> To drag with step frequency value, enable dragging support for pointer. </remarks>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.NeedlePointer.StepFrequencyProperty">
            <summary>
            Gets or sets the step frequency of needle pointer. It is used to snap the values while dragging the pointer.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.Pointer">
            <summary>
            Represents the pointer. To render this pointer, create an instance of this class <see cref="T:Syncfusion.SfGauge.XForms.Pointer" ></see>and set required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.Pointer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.Pointer"/> class. using this instance, you can customize the pointers for linear scale.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Pointer.IsEnableAnimationChanged">
            <summary>
            Gets or sets a value indicating whether the EnableAnimation property value is changed or not. Using this boolean, stopped pointer animation while exporting image.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Pointer.ValueProperty">
            <summary>
             Gets or sets the value property of the pointer. It customizes the value for pointer. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Pointer.Value">
            <summary>
            Gets or sets the value of the pointer. It customizes the value for pointer. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the Value of the pointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	RangePointer pointer = new RangePointer();
            	pointer.Value = 10;
            	scale.Pointers.Add(pointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Pointer.ColorProperty">
            <summary>
            Gets or sets the color property of the pointer. It customizes the color of an pointer. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Pointer.Color">
            <summary>
            Gets or sets the color of the pointer. It customizes the color of the pointer. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="P:Syncfusion.SfGauge.XForms.Pointer.Color"/> value.</value>
            <example>
            This sample shows how to set the Color of the pointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	RangePointer rangePointer = new RangePointer();
            	rangePointer.Color = Color.Red;
            	scale.Pointers.Add(rangePointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Pointer.EnableAnimationProperty">
            <summary>
            Gets or sets a value that indicates whether the pointer to be drawn with animation of the pointer. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Pointer.EnableAnimation">
            <summary>
            Gets or sets a value that indicates whether the pointer has to be drawn with animation of the pointer.
            </summary>
            <value>This property takes the <see cref="T:System.Boolean"/> value.</value>
            <example>
            This sample shows how to set the Offset of the pointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	RangePointer rangePointer = new RangePointer();
            	rangePointer.EnableAnimation = true;
            	scale.Pointers.Add(rangePointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Pointer.AnimationDurationProperty">
            <summary>
            Gets or sets the animation duration of the pointer. It customizes the animation duration of an pointer. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Pointer.AnimationDuration">
            <summary>
            Gets or sets the animation duration of the pointer. It customizes the animation duration of an pointer.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the animation duration of the pointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	RangePointer rangePointer = new RangePointer();
            	rangePointer.AnimationDuration = 1.5;
            	scale.Pointers.Add(rangePointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.Pointer.Syncfusion#XForms#Themes#IThemeElement#OnControlThemeChanged(System.String,System.String)">
            <summary>
            Called when control theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.Pointer.Syncfusion#XForms#Themes#IThemeElement#OnCommonThemeChanged(System.String,System.String)">
            <summary>
            Called when common theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="E:Syncfusion.SfGauge.XForms.Pointer.ValueChangeStarted">
            <summary>
            Called when the user starts selecting a new value of pointer by dragging.
            </summary>
            <seealso cref="!:EnableDragging">
            While dragging the pointer, there are other events (ValueChanging and ValueChangeCompleted) will be called after the ValueChangeStarted event.
            </seealso>
            <remarks>
            This event shouldn't be used to update the pointer value (use PointerPositionChanged event for that), but rather to be notified when the user has started selecting a new value by starting a drag. The value passed will be the last value that the pointer had before the change began.
            </remarks>
        </member>
        <member name="E:Syncfusion.SfGauge.XForms.Pointer.ValueChanging">
            <summary>
            Called during a drag when the user is selecting before a new value for the pointer by dragging.
            </summary>
            <seealso cref="!:EnableDragging">
            While dragging the pointer, there are other events (ValueChangeCompleted) will be called after the ValueChanging event.
            </seealso>
            <remarks>
            This event shouldn't be used to update the pointer value (use PointerPositionChanged event for that), but rather it will show the oldvalue and newvalue of the pointer.
            </remarks>
        </member>
        <member name="E:Syncfusion.SfGauge.XForms.Pointer.ValueChanged">
            <summary>
            Called when the user is selecting a new value for the pointer by dragging.
            </summary>
            <seealso cref="!:EnableDragging">
            While dragging the pointer, there are other events (ValueChangeStarted and ValueChanging ) will be called before the ValueChangeCompleted event.
            </seealso>
            <remarks>
            This event is used to show the updated value of the pointer.
            </remarks>
        </member>
        <member name="E:Syncfusion.SfGauge.XForms.Pointer.ValueChangeCompleted">
            <summary>
            Called when the user is done selecting a new value of the pointer by dragging.
            </summary>
            <seealso cref="!:EnableDragging">
            While dragging the pointer, there are other events (ValueChangeStarted and ValueChanging ) will be called before the ValueChangeCompleted event.
            </seealso>
            <remarks>
            This event shouldn't be used to update the pointer value (use PointerPositionChanged event for that), but rather to know when the user has completed selecting a new value by ending a drag.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.Pointer.OnPointerValueChangeStarted(Syncfusion.SfGauge.XForms.PointerValueChangedEventArgs)">
            <summary>
            This method is used for ValueChangeStarted event.
            </summary>
            <param name="args">Value changed arguments.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.Pointer.OnPointerValueChanging(Syncfusion.SfGauge.XForms.PointerValueChangingEventArgs)">
            <summary>
            This method is used for ValueChanging event.
            </summary>
            <param name="args">Value changing arguments.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.Pointer.OnPointerValueChanged(Syncfusion.SfGauge.XForms.PointerValueChangedEventArgs)">
            <summary>
            This method is used for ValueChanged event.
            </summary>
            <param name="args">Value changed arguments.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.Pointer.OnPointerValueChangeCompleted(Syncfusion.SfGauge.XForms.PointerValueChangedEventArgs)">
            <summary>
            This method is used for ValueChangeCompleted event.
            </summary>
            <param name="args">Value changed arguments.</param>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.PointerValueChangedEventArgs">
            <summary>
            To get the pointer drag value changed arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.PointerValueChangedEventArgs.CurrentValue">
            <summary>
            To get the current drag value.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.PointerValueChangedEventArgs.Value">
            <summary>
            Gets the updated value of pointer.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.PointerValueChangingEventArgs">
            <summary>
            To get the ValueChanging event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.PointerValueChangingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to restrict the updating pointer value and cancel dragging.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.PointerValueChangingEventArgs.NewValue">
            <summary>
            Gets the new pointer value which is updating the pointer value.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.PointerValueChangingEventArgs.OldValue">
            <summary>
            Gets the old value of pointer which is updated by pointer dragging.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.PointerValueChangingEventArgs.CurrentValue">
            <summary>
            Gets or sets a value indicates whether the current drag value.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.PointerValueChangingEventArgs.PreviousValue">
            <summary>
            Gets or sets a value indicates whether the previous drag value.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.RangePointer">
            <summary>
            Represents range pointer. To render this pointer, create an instance of RangePointer class, and set required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.RangePointer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.RangePointer"/> class and Represents the RangePointer.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.RangePointer.OffsetProperty">
            <summary>
            Gets or sets the offset value of the RangePointer. It customizes the position of the range pointer. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.RangePointer.Offset">
            <summary>
            Gets or sets the offset value of the RangePointer. This customizes the position of the range pointer.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the Offset of the RangePointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	RangePointer rangePointer = new RangePointer();
            	rangePointer.Offset = 0.1;
            	scale.Pointers.Add(rangePointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.RangePointer.StartOffsetProperty">
            <summary>
            Gets or sets the start offset value of the RangePointer. It customizes the start position of the range pointer. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.RangePointer.StartOffset">
            <summary>
            Gets or sets the start offset value of the RangePointer. It customizes the start position of the range pointer. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Single"/> StartOffset.</value>
            <example>
            This sample shows how to set the RangeStart of the RangePointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	RangePointer rangePointer = new RangePointer();
            	rangePointer.StartOffset = 1;
            	scale.Pointers.Add(rangePointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.RangePointer.EndOffsetProperty">
            <summary>
            Gets or sets the end offset value of the RangePointer. It customizes the end position of the range pointer. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.RangePointer.EndOffset">
            <summary>
            Gets or sets the end offset value of the RangePointer. It customizes the end position of the range pointer.
            </summary>
            <value>This property takes the <see cref="T:System.Single"/> StartOffset.</value>
            <example>
            This sample shows how to set the RangeStart of the RangePointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	RangePointer rangePointer = new RangePointer();
            	rangePointer.EndOffset = 0.97;
            	scale.Pointers.Add(rangePointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.RangePointer.RangeStartProperty">
            <summary>
            Gets or sets the range start value of the RangePointer. It customize the range start value for range pointer. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.RangePointer.RangeStart">
            <summary>
            Gets or sets the range start value of the RangePointer. It customizes the range start value for range pointer.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the RangeStart of the RangePointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	RangePointer rangePointer = new RangePointer();
            	rangePointer.RangeStart = 10;
            	scale.Pointers.Add(rangePointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.RangePointer.RangeCapProperty">
            <summary>
            Gets or sets the range start value of the RangePointer. It customizes the range cap value for range pointer. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.RangePointer.RangeCap">
            <summary>
            Gets or sets the pointer RangeCap of the range pointer. It customizes the range cap value for range pointer.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.RangePointer.ThicknessProperty">
            <summary>
            Gets or sets the thickness property of the range pointer. It customizes the thickness for range pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.RangePointer.Thickness">
            <summary>
            Gets or sets the thickness of the pointer. It customizes the thickness of range pointer. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the Offset of the pointer.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	RangePointer rangePointer = new RangePointer();
            	rangePointer.Thickness = 10;
            	scale.Pointers.Add(rangePointer);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.Range">
            <summary>
            Represents the range. To render this pointer, create an instance of the range class, and set required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.Range.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.Range"/> class to set required ranges properties in circular gauge. 
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Range.ColorProperty">
            <summary>
            Gets or sets the color property of the range. It customizes the color of an ranges. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Range.Color">
            <summary>
            Gets or sets the color of the range. It customizes the color for ranges. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="P:Syncfusion.SfGauge.XForms.Range.Color"/> value.</value>
            <example>
            This sample shows how to set the Color of the range.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	Range range = new Range();
            	range.Color = Color.Red;
            	scale.Ranges.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Range.StartValueProperty">
            <summary>
            Gets or sets the start value property of the range. It customizes the start value of an ranges. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Range.StartValue">
            <summary>
            Gets or sets the start value of the range. It customizes the start value ranges. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the StartValue of the range.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	Range range = new Range();
            	range.StartValue = 10;
            	scale.Ranges.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Range.EndValueProperty">
            <summary>
            Gets or sets the end value property of the range. It customizes the end value for ranges. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Range.EndValue">
            <summary>
            Gets or sets the end value of a range. It customizes the end value of ranges. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the EndValue of the range.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	Range range = new Range();
            	range.StartValue = 10;
            	scale.Ranges.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Range.ThicknessProperty">
            <summary>
            Gets or sets the thickness property of ranges. It customizes the thickness of an ranges. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Range.Thickness">
            <summary>
            Gets or sets the thickness of the range. It customizes the thickness of an ranges. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the Thickness of the range.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	Range range = new Range();
            	range.Thickness = 10;
            	scale.Ranges.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Range.OffsetProperty">
            <summary>
            Gets or sets the offset value property of the ranges. It customizes the position of ranges for circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Range.Offset">
            <summary>
            Gets or sets the offset value of the range. It customizes the position of ranges. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the Offset of the range.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	Range range = new Range();
            	range.Offset = 0.5;
            	scale.Ranges.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Range.StartWidthProperty">
            <summary>
            Gets or sets the start width property of the range. It customizes the start width of an ranges. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Range.StartWidth">
            <summary>
            Gets or sets the start width of the range. It customizes the start width of an ranges for circular scale.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the StartWidth of the range.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	Range range = new Range();
            	range.StartWidth = 10;
            	scale.Ranges.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Range.EndWidthProperty">
            <summary>
            Gets or sets the end width property of the range. It customizes the end width of an ranges for circular scale.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Range.EndWidth">
            <summary>
            Gets or sets the end width of the range. It customizes the end width of an ranges for circular scale.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the EndWidth of the range.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	Range range = new Range();
            	range.EndWidth = 20;
            	scale.Ranges.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Range.OuterStartOffsetProperty">
            <summary>
            Gets or sets the outer start offset value of ranges. It customizes the outer start position of ranges. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Range.OuterStartOffset">
            <summary>
            Gets or sets the outer start offset value of ranges. It customizes the outer start position of ranges.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the OuterStartOffset of the range.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	Range range = new Range();
            	range.OuterStartOffset = 0.1;
            	scale.Ranges.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Range.OuterEndOffsetProperty">
            <summary>
            Gets or sets the outer end offset value of ranges. It customizes the outer end position of ranges. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Range.OuterEndOffset">
            <summary>
            Gets or sets the outer end offset value of ranges. This property customizes the outer end position of ranges.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the OuterEndOffset of the range.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	Range range = new Range();
            	range.OuterEndOffset = 0.1;
            	scale.Ranges.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Range.InnerStartOffsetProperty">
            <summary>
            Gets or sets the inner start offset value of ranges. It customizes the inner start position of ranges. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Range.InnerStartOffset">
            <summary>
            Gets or sets the inner start offset value of the range. It customizes the inner start position of an ranges. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the OuterStartOffset of the range.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	Range range = new Range();
            	range.InnerStartOffset = 0.1;
            	scale.Ranges.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Range.InnerEndOffsetProperty">
             <summary>
            Gets or sets the inner end offset value of ranges. It customizes the inner end position of ranges. This is a bindable property.
             </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Range.InnerEndOffset">
            <summary>
            Gets or sets the inner end offset value of the range. It customizes the inner end position of ranges. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the InnerEndOffset of the range.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	Range range = new Range();
            	range.InnerEndOffset = 0.1;
            	scale.Ranges.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Range.GradientStopsProperty">
            <summary>
            Gets or sets a collection of GradientColor property in circular range. It customizes the collection of gradient color of an  ranges.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Range.GradientStops">
            <summary>
            Gets or sets a collection of GradientColor in circular range. It customizes the collection of gradient color for ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.Range.OnBindingContextChanged">
            <summary>
            Method ise used to set binding context. 
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.Range.Syncfusion#XForms#Themes#IThemeElement#OnControlThemeChanged(System.String,System.String)">
            <summary>
            Called when control theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.Range.Syncfusion#XForms#Themes#IThemeElement#OnCommonThemeChanged(System.String,System.String)">
            <summary>
            Called when common theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.Scale">
            <summary>
            Implements the properties of scale, which integrates labels, tick marks, and a rim of the circular gauge.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.Scale.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.Scale"/> class to set required header properties in the circular scale.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.RangesProperty">
            <summary>
            Gets or sets a collection of the ranges property in circular scale. It sets multiple ranges for circular scale.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.Ranges">
            <summary>
            Gets or sets a collection of the ranges in circular scale. It sets multiple ranges for circular scale. This is a bindable property.
            </summary>	
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.CustomLabels">
            <summary>
            Gets or sets custom labels for the circular scale. It draws the labels and ticks based on custom labels.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.CustomLabelsProperty">
            <summary>
            Gets or sets custom labels property for circular scale. It draws the labels and ticks based on custom labels.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.PointersProperty">
            <summary>
            Gets or sets the pointers property of the circular scale. It adds or removes the pointers from collection. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.Pointers">
            <summary>
            Gets or sets the pointers of the circular scale. It adds or removes the pointers from collection. This is a bindable property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.StartValueProperty">
            <summary>
            Gets or sets the start value property of the scale. It customizes the start value for scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.StartValue">
            <summary>
            Gets or sets the start value of the scale. It customizes the start value for scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the StartValue of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.StartValue = 10;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.ScaleStartOffsetProperty">
            <summary>
            Gets or sets the ScaleStartOffset property value of the scale. It customizes the scale start offset value.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.ScaleStartOffset">
            <summary>
            Gets or sets the ScaleStartOffset value of the scale. It customizes the scale start offset value. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the ScaleStartOffset of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.ScaleStartOffset = 1;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.ScaleEndOffsetProperty">
            <summary>
            Gets or sets the ScaleEndOffset property value of the scale. It customizes the scale end offset value.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.ScaleEndOffset">
            <summary>
            Gets or sets the ScaleEndOffset value of the scale. It customizes the scale end offset value. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the ScaleEndOffset of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.ScaleEndOffset = 0.95;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.EndValueProperty">
            <summary>
            Gets or sets the end value of the scale. It customizes the end value for scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.EndValue">
            <summary>
            Gets or sets the end value of the scale. It customizes the end value for scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the EndValue of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.EndValue = 100;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.StartAngleProperty">
            <summary>
            Gets or sets the start angle property value of the scale. It customizes the start angle for scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.StartAngle">
            <summary>
            Gets or sets the start angle value of the scale. It customizes the start angle for scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the StartAngle of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.StartAngle = 10;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.SweepAngleProperty">
            <summary>
            Gets or sets the sweep angle property value of the scale. It customizes the sweep angle for scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.SweepAngle">
            <summary>
            Gets or sets the sweep angle value of the scale. It customizes the sweep angle for scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the SweepAngle of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.SweepAngle = 270;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.IntervalProperty">
            <summary>
            Gets or sets the interval between the ticks of the scale. It customizes the interval of an scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.Interval">
            <summary>
            Gets or sets the interval value between the ticks of the scale. It customizes the interval of an scale.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the Interval of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.Interval = 10;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.LabelPrefixProperty">
            <summary>
            Gets or sets the label prefix property value of the scale. It prefixes the values to scale labels. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.LabelPrefix">
            <summary>
            Gets or sets the label prefix value of the scale. It prefixes the values to scale labels. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.String"/> value.</value>
            <example>
            This sample shows how to set the LabelPrefix of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.LabelPrefix = "$";
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.LabelPostfixProperty">
            <summary>
            Gets or sets the label postfix value of the scale. It postfixes the values to scale labels. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.LabelPostfix">
            <summary>
            Gets or sets the label postfix value of the scale. It postfixes the values to scale labels. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.String"/> value.</value>
            <example>
            This sample shows how to set the LabelPostfix of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.LabelPostfix = "%";
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.RimColorProperty">
            <summary>
            Gets or sets the color property of the rim of the scale. It customizes the color of the rim. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.RimColor">
            <summary>
            Gets or sets the color of the rim of the scale. It customizes the color of the rim. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:Xamarin.Forms.Color"/> value.</value>
            <example>
            This sample shows how to set the RimColor of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.RimColor = Color.Red;
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.RimThicknessProperty">
            <summary>
            Gets or sets the thickness property of the rim of the scale. It customizes the thickness of rim. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.RimThickness">
            <summary>
            Gets or sets the thickness of the rim of the scale. It customizes the thickness of rim. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the RimThickness of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.RimThickness = 10;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.LabelFontProperty">
            <summary>
            Gets or sets the LabelFont property of the circular scale. It changes the label font for circular scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.LabelFont">
            <summary>
            Gets or sets the LabelFont of the circular scale. It changes the label font for circular scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.String"/> value.</value>
            <example>
            This sample shows how to set the LabelFont of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.LabelFont = "Arial";
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example> 
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.FontFamilyProperty">
            <summary>
            Gets or sets the font family property of the text. It changes the font family of scale text in circular gauge. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.FontFamily">
            <summary>
            Gets or sets the font family of the text. It changes the font family of scale text in circular gauge. This is a bindable property.
            </summary>
            <value>The font family of the text.</value>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.FontAttributesProperty">
            <summary>
            Gets or sets font attributes property of the circular scale. It changes the font style for the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.FontAttributes">
            <summary>
            Gets or sets the font attributes for the circular scale. It changes the font style for the circular gauge.
            </summary>
            <value>This property takes the <see cref="P:Syncfusion.SfGauge.XForms.Scale.FontAttributes"/>value.</value> 
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.LabelFontSizeProperty">
            <summary>
            Gets or sets the LabelFontSize property of the circular scale. It changes the font of label for circular scale.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.LabelFontSize">
            <summary>
            Gets or sets the LabelFontSize property of the circular scale. It changes the font of label for circular scale.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the LabelFontSize of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.LabelFontSize = 10;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example> 
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.LabelColorProperty">
            <summary>
            Gets or sets the LabelColor property of the circular scale. It changes the label color for circular scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.LabelColor">
            <summary>
            Gets or sets the LabelColor of the circular scale. It changes the label color for circular scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:Xamarin.Forms.Color"/> value.</value>
            <example>
            This sample shows how to set the LabelColor of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.LabelColor = Color.Red;
            	gauge.Scales.Add(scale);
            }
            </code>  
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.MinorTicksPerIntervalProperty">
            <summary>
            Gets or sets the MinorTicksPerInterval property of the circular scale. The default interval property of scale is auto interval. This is bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.MinorTicksPerInterval">
            <summary>
            Gets or sets the MinorTicksPerInterval of the circular scale. The default interval property of scale is auto interval.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the MinorTicksPerInterval of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.MinorTicksPerInterval = 3;
            	gauge.Scales.Add(scale);
            }
            </code>  
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.MajorTickSettingsProperty">
            <summary>
            Gets or sets the MajorTickSettings of the circular scale. It customizes the major ticks of the circular scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.MajorTickSettings">
            <summary>
            Gets or sets the MajorTickSettings of the circular scale. It customizes the major ticks of the circular scale.
            </summary>
            <value>This property takes the <see cref="T:Syncfusion.SfGauge.XForms.TickSettings"/> value.</value>
            <example>
            This sample shows how to set the MajorTickSettings of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.MajorTickSettings = new TickSettings();
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example> 
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.MinorTickSettingsProperty">
            <summary>
            Gets or sets the MinorTickSettings property of the circular scale. It customizes the minor ticks of the circular scale.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.MinorTickSettings">
            <summary>
            Gets or sets the MinorTickSettings of the circular scale. It customizes the minor ticks of the circular scale.
            </summary>
            <value>This property takes the <see cref="T:Syncfusion.SfGauge.XForms.TickSettings"/> value.</value>
            <example>
            This sample shows how to set the MinorTickSettings of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.MinorTickSettings = new TickSettings();
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.ShowFirstLabelProperty">
            <summary>
            Gets or sets the show first label property value of the scale. It decieds to show whether the first label or not.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.ShowFirstLabel">
            <summary>
            Gets or sets the show first label value of the scale. It decides to show whether the first label or not. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Boolean"/> value.</value>
            <example>
            This sample shows how to set the ShowFirstLabel of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.ShowFirstLabel = true;
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.ShowLastLabelProperty">
            <summary>
            Gets or sets the show last label property value of the scale. It decies to show whether the last label or not.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.ShowLastLabel">
            <summary>
            Gets or sets the show last label value of the scale. It decides to show whether the last label or not. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Boolean"/> value.</value>
            <example>
            This sample shows how to set the ShowLastLabel of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.ShowLastLabel = true;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.ShowLabelsProperty">
            <summary>
            Gets or sets the show labels property value of the scale. It decides to show whether the labels or not. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.ShowLabels">
            <summary>
            Gets or sets the show labels value of the scale. It decides to show whether the labels or not. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Boolean"/> value.</value>
            <example>
            This sample shows how to set the ShowLabels of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.ShowLabels = true;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.EnableAutoAngleProperty">
            <summary>
            Gets or sets a value that indicates whether the angle is auto angle or not. It renders the circular scale based on auto angle. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.EnableAutoAngle">
            <summary>
            Gets or sets a value that indicates whether the angle is auto angle or not. It renders the scale based on auto angle. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Boolean"/> value.</value>
            <example>
            This sample shows how to set the EnabeAutoAngle of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.EnabeAutoAngle = true;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.ShowRimProperty">
            <summary>
            Gets or sets a value that indicates whether to show the rim or not. It customizes the visibility of gauge rim. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.ShowRim">
            <summary>
            Gets or sets a value that indicates whether to show the rim or not. It customizes the visibility of gauge rim. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Boolean"/> value.</value>
            <example>
            This sample shows how to set the ShowRim of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.ShowRim = true;
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.ShowTicksProperty">
            <summary>
            Gets or sets a value that indicates whether to show the ticks or not. It customizes the visibility of scale ticks. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.ShowTicks">
            <summary>
            Gets or sets whether to show the ticks or not. It customizes the visibility of ticks. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Boolean"/> value.</value>
            <example>
            This sample shows how to set the ShowTicks of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.ShowTicks = true;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.RadiusFactorProperty">
            <summary>
            Gets or sets the radius factor property of scales. It customizes the radius factor of the circular scale.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.RadiusFactor">
            <summary>
            Gets or sets the radius factor of the scale. It customizes the radius factor of the circular scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the RadiusFactor of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.RadiusFactor = 0.8;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.NumberOfDecimalDigitsProperty">
            <summary>
            Gets or sets the number of decimal digits property of the label of the scale. It displays number of digits in label.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.NumberOfDecimalDigits">
            <summary>
            Gets or sets the number of decimal digits of the label of the scale. It displays the number of digits in label. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Int32"/> value.</value>
            <example>
            This sample shows how to set the NumberOfDecimalDigits of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.NumberOfDecimalDigits = 2;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.LabelOffsetProperty">
            <summary>
            Gets or sets the label offset property value of the scale. It customizes the offset value for label. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.LabelOffset">
            <summary>
            Gets or sets the label offset value of scales. It customizes the offset value for label. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the LabelOffset of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.LabelOffset = 0.7;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.MaximumLabelsProperty">
            <summary>
            Gets or sets the MaximumLabels of the circular scale. It shows the maximum labels of the circular scale.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.MaximumLabels">
            <summary>
            Gets or sets the MaximumLabels of the circular scale. Used to show the maximum labels of circular scale. This is a bindable property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.EnableAutoIntervalProperty">
            <summary>
            Gets or sets a value that indicates whether the interval property should be calculated based on maximum labels or not.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.EnableAutoInterval">
            <summary>
            Gets or sets a value that indicates whether the interval should be calculated based on maximum labels or not.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.DirectionProperty">
            <summary>
            Gets or sets the direction property of the scale. It changes the direction in clockwise or anticlockwise direction.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.Direction">
            <summary>
            Gets or sets the direction of the scale. It changes the direction in clockwise or anticlockwise direction.
            </summary>
            <value>This property takes the enum value.</value>
            <example>
            This sample shows how to set the direction of the scale.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	Scale scale = new Scale();
            	scale.Direction = ScaleDirection.AntiClockWise;
            	gauge.Scales.Add(scale);
            }
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.NativeObject">
            <summary>
            Gets or sets the native object.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.Scale.UseRangeColorForLabels">
            <summary>
            Gets or sets a value that indicates whether to use the same color applied for range color as labels.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Scale.UseRangeColorForLabelsProperty">
            <summary>
            Gets or sets a value that indicates whether to use the same color applied for range color as labels. This is a bindable property.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.Scale.LabelCreatedEventHandler">
            <summary>
            
            Event handler for LabelCreated event.Event handler can be used to handle an event that occurs during label creation.
            </summary>
            <param name="sender">Object.</param>
            <param name="args">Label Created Event Args.</param>
        </member>
        <member name="E:Syncfusion.SfGauge.XForms.Scale.LabelCreated">
            <summary>
            Event that is raised when the label is created
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.Scale.OnLabelCreated(Syncfusion.SfGauge.XForms.LabelCreatedEventArgs)">
            <summary>
            It is used to invoke the label created event.
            </summary>
            <param name="args"> Label created event arguments.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.Scale.OnBindingContextChanged">
            <summary>
            Method used to binding context.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.Scale.Syncfusion#XForms#Themes#IThemeElement#OnControlThemeChanged(System.String,System.String)">
            <summary>
            Called when control theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.Scale.Syncfusion#XForms#Themes#IThemeElement#OnCommonThemeChanged(System.String,System.String)">
            <summary>
            Called when common theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.LabelCreatedEventArgs">
            <summary>
            Represents the label created event args. You can customize the label content using the label created event args.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LabelCreatedEventArgs.LabelContent">
            <summary>
            Gets or sets the label content. Used to customize the label content for scale.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.SfCircularGauge">
            <summary>
            Represents a root class for the circular gauge control; this class is used to add a collection of scales.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfCircularGauge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.SfCircularGauge"/> class to customize the circular gauge with required properties.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfCircularGauge.NativeObject">
            <summary>
            Gets or sets the native object.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfCircularGauge.GetStream">
            <summary>
            This method returns the stream of circular gauge output.
            </summary>
            <returns>It will return the circular gauge as Stream asynchronously.</returns>        
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfCircularGauge.SaveAsImage(System.String)">
            <summary>
            This method is used to export the gauge as image in the given file name and image format.
            </summary>
            <param name="fileName">It contains the file name of the exported image.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfCircularGauge.OnBindingContextChanged">
            <summary>
            Method used to set binding context.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.SfCircularGauge.CircularPointerEventHandler">
            <summary>
            Event handler for circular pointer event.
            </summary>
            <param name="sender">Gauge object.</param>
            <param name="args">Pointer Position Changed Args.</param>
        </member>
        <member name="E:Syncfusion.SfGauge.XForms.SfCircularGauge.PointerPositionChanged">
            <summary>
            PointerPositionChanged event is raised on change of the pointer position.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfCircularGauge.Scales">
            <summary>
            Gets or sets the scales of the circular gauge. It adda multiple scales to the circular gauge. This is a bindable property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SfCircularGauge.ScalesProperty">
            <summary>
            Gets or sets the scales of the circular gauge property. It adda multiple scale to the circular gauge. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfCircularGauge.GaugeType">
            <summary>
            Gets or sets the gauge type of the circular gauge. You can set different types of gauges to the circular gauge.
            </summary>
            <value>This property takes the <see cref="P:Syncfusion.SfGauge.XForms.SfCircularGauge.GaugeType"/> as value. </value>
            <example>
            This sample shows how to set the GaugeType for the gauge.
            <code>
            void MyPage()
            {
            	SfCircularGauge gauge = new SfCircularGauge();
            	gauge.GaugeType = GaugeType.Default;
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SfCircularGauge.GaugeTypeProperty">
            <summary>
            Gets or sets the gauge type of the circular gauge. You can set different type of gauges to the circular gauge. This is bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfCircularGauge.CircularCoefficient">
            <summary>
            Gets or sets the CircularCoefficient of the circular gauge. It customizes the circular coefficient for gauge. This is a bindable property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SfCircularGauge.CircularCoefficientProperty">
            <summary>
            Gets or sets the CircularCoefficient of the circular gauge property. It customizes the circular coefficient for gauge. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfCircularGauge.IsCenterAligned">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.SfGauge.XForms.SfCircularGauge"/> is
            center placed.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SfCircularGauge.IsCenterAlignedProperty">
            <summary>
            Gets or sets a value that indicates whether the circular gauge position is center. This is a bindable property. 
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfCircularGauge.Headers">
            <summary>
            Gets or sets the headers of the circular gauge. It adda a collection of headers to the circular gauge. This is a bindable property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SfCircularGauge.GaugeHeadersProperty">
            <summary>
            Gets or sets the headers property of the circular gauge. It adds a collection of headers to the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfCircularGauge.Annotations">
            <summary>
            Gets or sets the annotations for the circular gauge. It marks the specific area in the circular gauge. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:Syncfusion.SfGauge.XForms.CircularGaugeAnnotationCollection"/> as value. </value>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SfCircularGauge.AnnotationsProperty">
            <summary>
            Gets or sets the annotations for the circular gauge property. It marks specific area in the circular gauge. This is a bindable property.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfCircularGauge.OnSizeRequest(System.Double,System.Double)">
            <summary>
            Method used to get size for circular gauge.
            </summary>
            <param name="widthConstraint">Width constraint.</param>
            <param name="heightConstraint">Height constraint.</param>
            <returns>SizeRequest.</returns>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfCircularGauge.Syncfusion#XForms#Themes#IParentThemeElement#GetThemeDictionary">
            <summary>
            Gets the CircularGaugeStyles.
            </summary>
            <returns>ResourceDictionary.</returns>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfCircularGauge.Syncfusion#XForms#Themes#IThemeElement#OnControlThemeChanged(System.String,System.String)">
            <summary>
            Called when control theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfCircularGauge.Syncfusion#XForms#Themes#IThemeElement#OnCommonThemeChanged(System.String,System.String)">
            <summary>
            Called when common theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.PointerPositionChangedArgs">
            <summary>
            The PointerPositionChangedArgs class represents the properties of the PointerPositionChanged event in the circular gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.PointerPositionChangedArgs.rangeStartValue">
            <summary>
            Get or set the range start value.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.PointerPositionChangedArgs.pointerValue">
            <summary>
            Get or set the pointer value.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.PointerPositionChangedArgs.rangeStartPosition">
            <summary>
            Get or set the range start position.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.PointerPositionChangedArgs.pointerValuePostion">
            <summary>
            Get or set the pointer value position.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.PointerPositionChangedArgs.Pointer">
            <summary>
            Get or set the pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.PointerPositionChangedArgs.Scale">
            <summary>
            Get or set the scale.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.SfCircularGaugeStyles">
            <summary>
            Holds the theme style for the SfCircularGauge control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfCircularGaugeStyles.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.SfCircularGaugeStyles"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.TickSettings">
            <summary>
            Represents tick settings. To render ticks, create an instance of TickSettings class, and set required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.TickSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.TickSettings"/> class and Represents the TickSettings.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.TickSettings.LengthProperty">
            <summary>
            Gets or sets tick length in the circular gauge. It customizes the ticks length of the circular scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.TickSettings.Length">
            <summary>
            Gets or sets the tick length in the circular gauge. It customizes the tick length of the circular scale.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.TickSettings.ThicknessProperty">
            <summary>
            Gets or sets the tick thickness in the circular gauge. It draws the ticks based on the thickness of scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.TickSettings.Thickness">
            <summary>
            Gets or sets the tick thickness in the circular gauge. It draws the ticks based on the thickness of scale.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.TickSettings.ColorProperty">
            <summary>
            Gets or sets the tick color in the circular gauge. It cutomizes the tick colors of the circular scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.TickSettings.Color">
            <summary>
            Gets or sets the tick color in the circular gauge. It cutomizes the ticks colors of the circular scale.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.TickSettings.OffsetProperty">
            <summary>
            Gets or sets the tick offset value of the circular gauge. It customizes the position of ticks for the circular scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.TickSettings.Offset">
            <summary>
            Gets or sets the tick offset value of the circular gauge. It customizes the position of ticks for the circular scale. 
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.TickSettings.StartOffsetProperty">
            <summary>
            Gets or sets the start offset for ticks of the circular gauge. It customizes the start position of ticks. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.TickSettings.StartOffset">
            <summary>
            Gets or sets the start offset value for ticks in the circular gauge. It customizes the start position of ticks for the circular scale.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.TickSettings.EndOffsetProperty">
            <summary>
            Gets or sets the end offset property of ticks for the circular gauge. It customizes the end position of ticks in a circular scale.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.TickSettings.EndOffset">
            <summary>
            Gets or sets the end offset for ticks of the circular gauge. It customizes the end position of ticks for a circular scale.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.TickSettings.Syncfusion#XForms#Themes#IThemeElement#OnControlThemeChanged(System.String,System.String)">
            <summary>
            Called when control theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.TickSettings.Syncfusion#XForms#Themes#IThemeElement#OnCommonThemeChanged(System.String,System.String)">
            <summary>
            Called when common theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.CharacterType">
            <summary>
            The Digital Characters can be drawn in 4 different segments as follows.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.CharacterType.SegmentSeven">
            <summary>
            The Digital Characters rather than using the alphabets, these are mainly used to display numbers.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.CharacterType.SegmentFourteen">
            <summary>
            These type of characters are used to display both alphabets and numbers.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.CharacterType.SegmentSixteen">
            <summary>
            These type of characters are also used to display both alphabets and numbers.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.CharacterType.EightCrossEightDotMatrix">
            <summary>
            These type of characters are used to display special characters along with the alphabets and numbers.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.SfDigitalGauge">
            <summary>
            Represents a root class for the digital gauge control. This class is used to add character adn types.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfDigitalGauge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.SfDigitalGauge"/> class.
            Represents the root class. To render this class, create a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.SfDigitalGauge"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfDigitalGauge.NativeObject">
            <summary>
            Gets or sets the native object.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.SfDigitalGauge.ValueChangedEventHandler">
            <summary>
            Represents the method that used to handle the SfDigitalGauge.ValueChanged event of the SfDigitalGauge.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="E:Syncfusion.SfGauge.XForms.SfDigitalGauge.ValueChanged">
            <summary>
            Occurs when value changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfDigitalGauge.RaiseValueChanged(Syncfusion.SfGauge.XForms.ValueChangedEventArgs)">
            <summary>
            Raises the value changed.
            </summary>
            <param name="args">Arguments.</param>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfDigitalGauge.CharacterType">
            <summary>
            Gets or sets the CharacterType of the digital gauge. It customizes the character type of digital gauge.
            </summary>
            <value>This property takes the <see cref="P:Syncfusion.SfGauge.XForms.SfDigitalGauge.CharacterType"/> value.</value>
            <example>
            This sample shows how to set the CharacterType of the digital gauge.
            <code>
            void MyPage()
            {
            	SfDigitalGauge gauge = new SfDigitalGauge();
            	gauge.CharacterType = CharacterType.SegmentSeven;
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SfDigitalGauge.CharacterTypeProperty">
            <summary>
            Gets or sets the CharacterType of the digital gauge. It customizes the character type of the digital gauge. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfDigitalGauge.CharacterStrokeColor">
            <summary>
            Gets or sets the character stroke color of the digital gauge. It customizes the stroke color of a character. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:Xamarin.Forms.Color"/> value.</value>
            <example>
            This sample shows how to set the CharacterStrokeColor of the digital gauge.
            <code>
            void MyPage()
            {
            	SfDigitalGauge gauge = new SfDigitalGauge();
            	gauge.CharacterStrokeColor = Color.Red;
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SfDigitalGauge.CharacterStrokeColorProperty">
            <summary>
            Gets or sets the character stroke color of the digital gauge. It customizes the stroke color of an character.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfDigitalGauge.DisabledSegmentColor">
            <summary>
            Gets or sets the disabled segment color of the digital gauge. It customizes the disabled color of a segment.
            </summary>
            <value>This property takes the <see cref="T:Xamarin.Forms.Color"/> value.</value>
            <example>
            This sample shows how to set the DisabledSegmentColor of the digital gauge.
            <code>
            void MyPage()
            {
            	SfDigitalGauge gauge = new SfDigitalGauge();
            	gauge.DisabledSegmentAlpha = Color.Red;
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SfDigitalGauge.DisabledSegmentColorProperty">
            <summary>
            Gets or sets the character height of the digital gauge. It customizes the character height for digital  gauge. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfDigitalGauge.CharacterHeight">
            <summary>
            Gets or sets the character height of the digital gauge. It customizes the character height for the digital  gauge.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the CharacterHeight of the digital gauge.
            <code>
            void MyPage()
            {
            	SfDigitalGauge gauge = new SfDigitalGauge();
            	gauge.CharacterHeight = 30;
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SfDigitalGauge.CharacterHeightProperty">
            <summary>
            Gets or sets the character height of the digital gauge. It customizes the character height for digital  gauge. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfDigitalGauge.CharacterWidth">
            <summary>
            Gets or sets the character width of the digital gauge. It customizes the character width for digital  gauge.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the CharacterWidth of the digital gauge.
            <code>
            void MyPage()
            {
            	SfDigitalGauge gauge = new SfDigitalGauge();
            	gauge.CharacterWidth = 10;
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SfDigitalGauge.CharacterWidthProperty">
            <summary>
            Gets or sets the character width of the digital gauge. It customizes the character width for the digital gauge. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfDigitalGauge.SegmentStrokeWidth">
            <summary>
            Gets or sets the segment stroke width of the digital gauge. It customizes the stroke width of an segment.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the SegmentStrokeWidth of the digital gauge.
            <code>
            void MyPage()
            {
            	SfDigitalGauge gauge = new SfDigitalGauge();
            	gauge.SegmentStrokeWidth = 10;
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SfDigitalGauge.SegmentStrokeWidthProperty">
            <summary>
            Gets or sets the segment stroke width of the digital gauge. It customizes the stroke width of a segment. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfDigitalGauge.CharacterSpacing">
            <summary>
            Gets or sets the character spacing of the digital gauge. It specifies the spacing between the characters.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> value.</value>
            <example>
            This sample shows how to set the CharacterSpacing of the digital gauge.
            <code>
            void MyPage()
            {
            	SfDigitalGauge gauge = new SfDigitalGauge();
            	gauge.CharacterSpacing = 4;
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SfDigitalGauge.CharacterSpacingProperty">
            <summary>
            Gets or sets the character spacing of the digital gauge. It specifies the spacing between the characters. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfDigitalGauge.Value">
            <summary>
            Gets or sets the value of the digital gauge. It specifies the text to display the characters of gauge.
            </summary>
            <value>This property takes the <see cref="T:System.String"/> value.</value>
            <example>
            This sample shows how to set the Value of the digital gauge.
            <code>
            void MyPage()
            {
            	SfDigitalGauge gauge = new SfDigitalGauge();
            	gauge.Value = "SYNCFUSION";
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SfDigitalGauge.ValueProperty">
            <summary>
            Gets or sets the value of the digital gauge. It specifies the text to display the characters of gauge. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfDigitalGauge.DisabledSegmentAlpha">
            <summary>
            Gets or sets the disable segment alpha of the digital gauge. It customizes the color of the segment.
            </summary>
            <value>This property takes the <see cref="T:System.Int32"/> value.</value>
            <example>
            This sample shows how to set the DisabledSegmentAlpha of the digital gauge.
            <code>
            void MyPage()
            {
            	SfDigitalGauge gauge = new SfDigitalGauge();
            	gauge.DisabledSegmentAlpha = 1";
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SfDigitalGauge.DisabledSegmentAlphaProperty">
            <summary>
            Gets or sets the disable segment alpha of the digital gauge. It customizes the color of a segment. This is a bindable property.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfDigitalGauge.OnSizeRequest(System.Double,System.Double)">
            <summary>
            Method used to set size for digital gauge.
            </summary>
            <param name="widthConstraint">Width constraint.</param>
            <param name="heightConstraint">Height constraint.</param>
            <returns>SizeRequest.</returns>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfDigitalGauge.Syncfusion#XForms#Themes#IParentThemeElement#GetThemeDictionary">
            <summary>
            Gets the Digital Gauge Styles.
            </summary>
            <returns>ResourceDictionary.</returns>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfDigitalGauge.Syncfusion#XForms#Themes#IThemeElement#OnControlThemeChanged(System.String,System.String)">
            <summary>
            Called when control theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfDigitalGauge.Syncfusion#XForms#Themes#IThemeElement#OnCommonThemeChanged(System.String,System.String)">
            <summary>
            Called when common theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.ValueChangedEventArgs">
            <summary>
            Represents the value changed event arguments. You can customize the digital gauge values using ValueChangedEventArgs.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.ValueChangedEventArgs.DigitalGauge">
            <summary>
            Gets the digital gauge.
            </summary>
            <value>The digital gauge.</value>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.ValueChangedEventArgs.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.SfDigitalGaugeStyles">
            <summary>
            Holds the theme style for the SfDigitalGauge control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfDigitalGaugeStyles.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.SfDigitalGaugeStyles"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.LinearGaugeAnnotation">
            <summary>
            Represents the linear gauge annotation. To render this annotation, create an instance of LinearGaugeAnnotation class, and set required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.LinearGaugeAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.LinearGaugeAnnotation"/> class to set required annotation properties in linear gauge annotation.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearGaugeAnnotation.ScaleValue">
            <summary>
            Gets or sets the value for ScaleValue of annotation placement.Used to customize the annotation based on scale value.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearGaugeAnnotation.ScaleValueProperty">
            <summary>
            Gets or sets a value to the ScaleValue propertry of annotation. It customizes the annotation based on scale value.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearGaugeAnnotation.ScaleIndex">
            <summary>
            Gets or sets a value for the ScaleIndex of annotation. It sets annotation to the specified index of scale.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearGaugeAnnotation.ScaleIndexProperty">
            <summary>
            Gets or sets the value to the ScaleIndex property of annotation. It sets annotation to the specified index of scale.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearGaugeAnnotation.OffsetX">
            <summary>
            Gets or sets the position of annotation. It customizes the horizontal position of an annotation based on offset. 
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearGaugeAnnotation.OffsetXProperty">
            <summary>
            Gets or sets the position property of the annotation. It customizes the horizontal position of annotation based on offset.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearGaugeAnnotation.OffsetY">
            <summary>
            Gets or sets the position of annotation. It customizes the vertical position of an annotation based on offset. 
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearGaugeAnnotation.OffsetYProperty">
            <summary>
            Gets or sets the position property of annotation. It customizes the vertical position of an annotation based on offset.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearGaugeAnnotation.HorizontalViewAlignment">
            <summary>
            Gets or sets the HorizontalAlignment position of annotation. It aligns the view horizontal position based on view alignment.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearGaugeAnnotation.HorizontalViewAlignmentProperty">
            <summary>
            Gets or sets the HorizontalAlignment property position of the annotation. It aligns the view horizontal position based on view alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearGaugeAnnotation.VerticalViewAlignment">
            <summary>
            Gets or sets the VerticalAlignment position of annotation. It aligns the view vertical position based on view alignment. 
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearGaugeAnnotation.VerticalViewAlignmentProperty">
            <summary>
            Gets or sets the VerticalAlignment property position of annotation. It aligns the view vertical position based on view alignment. 
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearGaugeAnnotation.View">
            <summary>
            Gets or sets the view property of annotation. You can customize the view of annotation. This is a bindable property. 
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearGaugeAnnotation.ViewProperty">
            <summary>
            Gets or sets the view of the annotation. You can customize the view of annotation. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearGaugeAnnotation.ViewMargin">
            <summary>
            Gets or sets the ViewMargin of annotation. You can customize the margin of view by setting this property. This is a bindable property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearGaugeAnnotation.ViewMarginProperty">
            <summary>
            Gets or sets the ViewMargin of annotation. You can customize the margin of view by setting this property. This is a bindable property.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.LinearGaugeAnnotationCollection">
            <summary>
            Represents the linear gauge annotaion collection. To render this annotation, create an instance LinearGaugeAnnotationCollection, and set required properties.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.BarPointer">
            <summary>
            Represents the bar pointer. To render bar pointer, create an instance of the BarPointer class and set required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.BarPointer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.BarPointer"/> class. Using this instance, you can set value to the required properties of bar pointer.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.BarPointer.CornerRadiusProperty">
            <summary>
            Gets or sets the rounded corner value to draw the bar pointer with rounded corners for the linear gauge control.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.BarPointer.CornerRadius">
            <summary>
            Gets or sets the rounded corner value to draw the bar pointer with rounded corners for linear gauge control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.BarPointer.CornerRadiusTypeProperty">
            <summary>
            Gets or sets the rounded corner radius type to draw the bar pointer with rounded corners to the linear gauge control.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.BarPointer.CornerRadiusType">
            <summary>
            Gets or sets the rounded corner radius type to draw the bar pointer with rounded corners to the linear gauge control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.BarPointer.GradientStopsProperty">
            <summary>
            Gets or sets a collection of gradient colors to customize the gradient stop color to the linear gauge.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.SfGauge.XForms.BarPointer.GradientStops" -->
        <member name="T:Syncfusion.SfGauge.XForms.Orientation">
            <summary>
            It describes the enumeration for orientation in two directions. It customizes the orientation of the linear gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Orientation.OrientationVertical">
            <summary>
            It describes the enumeration for orientation in vertical direction. Displays the control vertically when this orientation is set.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.Orientation.OrientationHorizontal">
            <summary>
            It describes the enumeration for orientation in horizontal direction. Displays the control horizontally when this orientation is set.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.ScalePosition">
            <summary>
            It describes the enumeration for ScalePosition in LinearGauge. You can customize the position of the linear scale using ScalePosition.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.ScalePosition.Forward">
            <summary>
            It describes the enumeration for ScalePosition in LinearGauge. You can customize the position of the linear scale to forward direction using ScalePosition.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.ScalePosition.BackWard">
            <summary>
            It describes the enumeration for ScalePosition in LinearGauge. You can customize the position of the linear scale to backward direction using ScalePosition.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.SymbolPointerPosition">
            <summary>
            It describes the enumeration for PointerPosition in LinearGauge. You can customize the pointer position of linear gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SymbolPointerPosition.Far">
            <summary>
            It describes the enumeration for SymbolPointerPosition in LinearGauge. You can customize the pointer position of linear gauge to the left.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SymbolPointerPosition.Away">
            <summary>
            It describes the Enumeration for SymbolPointerPosition in LinearGauge. You can customize the pointer position of linear gauge to the right.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.MarkerShapes">
            <summary> 
            Represents MarkerShape of MarkerPointer. You can customize the marker shapes of marker pointer for the linear gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.MarkerShapes.Circle">
            <summary>
            Represents the circle MarkerShape of MarkerPointer. You can customize the marker shape of marker pointer to circle.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.MarkerShapes.Diamond">
            <summary>
            Represents Diamond MarkerShape of MarkerPointer. You can customize the marker shape of marker pointer to diamond.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.MarkerShapes.Image">
            <summary>
            Represents Image MarkerShape of MarkerPointer. You can customize the marker shape of marker pointer to image.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.MarkerShapes.InvertedTriangle">
            <summary>
            Represents InvertedTriangle MarkerShape of MarkerPointer. You can customize the marker shape of marker pointer to inverted triangle.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.MarkerShapes.Triangle">
            <summary>
            Represents Triangle MarkerShape of MarkerPointer. You can customize the marker shape of marker pointer to triangle.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.MarkerShapes.Rectangle">
            <summary>
            Represents Rectangle MarkerShape of MarkerPointer. You can customize the marker shape of marker pointer to rectangle.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.CornerRadiusType">
            <summary>
            It describes the corner radius type for scale and pointer. You can customize the corner radius type for linear scale and pointer.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.CornerRadiusType.Start">
            <summary>
            This returns corner radius for scale and pointer. You can customize the corner radius type to start for linear scale and pointer.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.CornerRadiusType.End">
            <summary>
            This returns corner radius for scale and pointer. You can customize the corner radius type to end for linear scale and pointer.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.CornerRadiusType.Both">
            <summary>
            This returns corner radius for scale and pointer. You can customize the corner radius type to both start and end for linear scale and pointer.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.CornerRadiusType.None">
            <summary>
            This returns the default corner radius.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.ViewAlignment">
            <summary>
            It describes the enumeration for AnnotationAlignment in gauge. You can customize the annotation view position.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.ViewAlignment.Start">
            <summary>
            It describes the Enumeration for ViewAlignment in start position. You can customize the annotation view position.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.ViewAlignment.Center">
            <summary>
            It describes the Enumeration for ViewAlignment in center position. You can customize the annotation view position.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.ViewAlignment.End">
            <summary>
            It describes the Enumeration for ViewAlignment in far position. You can customize the annotation view position.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.LinearHeader">
            <summary>
            Represents the linear gauge header. To render this, create an instance of LinearHeader, and set required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.LinearHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.LinearHeader"/> class to set required header properties in linear gauge header.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearHeader.TextProperty">
            <summary>
            Gets or sets the text property of the linear header. It changes the linear gauge header text. This is bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearHeader.Text">
            <summary>
            Gets or sets the text of the linear header. It changes the linear gauge header text. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.String"/> as value. </value>
            <example>
            This sample shows how to set the Text for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	LinearHeader header = new LinearHeader();
            	header.Text = "Syncfusion";
            	scale.Headers.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearHeader.TextSizeProperty">
            <summary>
            Gets or sets the text size property of the linear header. It changes the linear gauge header text size. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearHeader.TextSize">
            <summary>
            Gets or sets the text size of the linear header. It changes the linear gauge header text size. This is a bindable property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearHeader.FontFamilyProperty">
            <summary>
            Gets or sets the font family of the text. It changes the font family of header text in linear gauge. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearHeader.FontFamily">
            <summary>
            Gets or sets the font family of the text. It changes the font family of header text in linear gauge.
            </summary>
            <value>The font family of the text.
            </value>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearHeader.FontAttributesProperty">
            <summary>
            Gets or sets the font attributes for linear header. It changes the font style for the linear gauge header. This is bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearHeader.FontAttributes">
            <summary>
            Gets or sets font attributes for linear header. It changes the font style for the linear gauge header.
            </summary>
            <value>This property takes the <see cref="P:Syncfusion.SfGauge.XForms.LinearHeader.FontAttributes"/>value.</value> 
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearHeader.FontProperty">
            <summary>
            Gets or sets the font of the linear header. It changes the linear header size, font family, and font weight. This is bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearHeader.Font">
            <summary>
            Gets or sets the font of the linear header. It changes the gauge header size, font family, and font weight.
            </summary>
            <value>This property takes the <see cref="P:Syncfusion.SfGauge.XForms.LinearHeader.Font"/> as value. </value>
            <example>
            This sample shows how to set the Font for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	LinearHeader header = new LinearHeader();
            	header.Font = new Font();
            	scale.Headers.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearHeader.PositionProperty">
            <summary>
            Gets or sets the position of the linear header. It changes the horizontal and vertical position of linear header. This is bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearHeader.Position">
            <summary>
            Gets or sets the position of the linear header. It changes the horizontal and vertical positions of the linear gauge header.
            </summary>
            <value>This property takes the <see cref="T:Xamarin.Forms.Point"/> as value. </value>
            <example>
            This sample shows how to set the Position for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	LinearHeader header = new LinearHeader();
            	header.Position = new Point(0.5, 0.7);
            	scale.Headers.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearHeader.OffsetProperty">
            <summary>
            Gets or sets the Offset of the linear header. It changes the horizontal and vertical offsets of gauge header. This is bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearHeader.Offset">
            <summary>
            Gets or sets the offset of the linear header. It changes the horizontal and vertical offsets of linear header.
            </summary>
            <value>This property takes the <see cref="T:Xamarin.Forms.Point"/> as value. </value>
            <example>
            This sample shows how to set the Offset for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	LinearHeader header = new LinearHeader();
            	header.Position = new Point(0.5, 0.7);
            	scale.Headers.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearHeader.ForegroundColorProperty">
            <summary>
            Gets or sets the foreground color of the linear header. It changes the foreground color for linear gauge header. This is bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearHeader.ForegroundColor">
            <summary>
            Gets or sets the foreground color of the linear header. It changes the foreground color for the linear gauge header.
            </summary>
            <value>This property takes the <see cref="T:Xamarin.Forms.Color"/> as value. </value>
            <example>
            This sample shows how to set the ForegroundColor for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	LinearHeader header = new LinearHeader();
            	header.ForegroundColor = Color.Red;
            	scale.Headers.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.LinearHeader.Syncfusion#XForms#Themes#IThemeElement#OnControlThemeChanged(System.String,System.String)">
            <summary>
            Called when control theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.LinearHeader.Syncfusion#XForms#Themes#IThemeElement#OnCommonThemeChanged(System.String,System.String)">
            <summary>
            Called when control theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.LinearPointer">
            <summary>
            Represents LinearPointer in the linear gauge. To render this, create an instance of LinearPointer, and set required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.LinearPointer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.LinearPointer"/> class to set required linear pointer properties in the linear gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearPointer.ValueProperty">
            <summary>
            Gets or sets the Value property of the linear pointer. It customizes the value of an linear pointer.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearPointer.Value">
            <summary>
            Gets or sets the Value property of the linear pointer. It customizes the value of an linear pointer. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the Value for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	LinearPointer pointer = new LinearPointer();
            	pointer.Value = 10;
            	scale.Pointers.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearPointer.ThicknessProperty">
            <summary>
            Gets or sets the Thickness property of the linear range. It customizes the thickness of an linear pointer for scale.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearPointer.Thickness">
            <summary>
            Gets or sets the Thickness of the linear range. It customizes the thickness of an linear pointer for scale.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the Thickness for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	LinearPointer pointer = new LinearPointer();
            	pointer.Thickness = 10;
            	scale.Pointers.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearPointer.ColorProperty">
            <summary>
            Gets or sets the color of the linear range. It customizes the color of an linear pointer of scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearPointer.Color">
            <summary>
            Gets or sets the Color property of the linear range. It customizes the color of an linear pointer of scale. 
            </summary>
            <value>This property takes the <see cref="P:Syncfusion.SfGauge.XForms.LinearPointer.Color"/> as value. </value>
            <example>
            This sample shows how to set the Color for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	LinearPointer pointer = new LinearPointer();
            	pointer.Color = Color.Red;
            	scale.Pointers.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearPointer.EnableAnimationProperty">
            <summary>
            Gets or sets a value that indicates whether the linear pointer is displayed with animation. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearPointer.EnableAnimation">
            <summary>
            Gets or sets a value that indicates whether the linear pointer is displayed with animation. It customizes the animation.
            </summary>
            <value>This property takes the <see cref="T:System.Boolean"/> as value. </value>
            <example>
            This sample shows how to set the EnableAnimation for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	LinearPointer pointer = new LinearPointer();
            	pointer.EnableAnimation = true;
            	scale.Pointers.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearPointer.AnimationDuration">
            <summary>
            Gets or sets the animation duration of the pointer. It customizes the animation duration of an pointer. This is a bindable property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearPointer.AnimationDurationProperty">
            <summary>
            Gets or sets the animation duration of the pointer. It customizes the animation duration of an pointer. This is a bindable property.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.LinearPointer.Syncfusion#XForms#Themes#IThemeElement#OnControlThemeChanged(System.String,System.String)">
            <summary>
            Called when control theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.LinearPointer.Syncfusion#XForms#Themes#IThemeElement#OnCommonThemeChanged(System.String,System.String)">
            <summary>
            Called when common theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.LinearRange">
            <summary>
            Represents the linear range. To render this range, create an instance of LinearRange class and set required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.LinearRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.LinearRange"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearRange.ColorProperty">
            <summary>
            Gets or sets the Color of the linear range. Used to customize the color of an range for linear gauge. This is a bindable property. 
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearRange.Color">
            <summary>
            Gets or sets the Color of the linear range. Used to customize the color of an range for linear gauge. 
            </summary>
            <value>This property takes the <see cref="P:Syncfusion.SfGauge.XForms.LinearRange.Color"/> as value. </value>
            <example>
            This sample shows how to set the Color for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	LinearRange range = new LinearRange();
            	range.Color = Color.Red;
            	scale.Ranges.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearRange.StartValueProperty">
            <summary>
            Gets or sets the StartValue of the linear range. Used to specify the start value of an linear range. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearRange.StartValue">
            <summary>
            Gets or sets the StartValue of the linear range. Used to specify the start value of an linear range.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the StartValue for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	LinearRange range = new LinearRange();
            	range.StartValue = 10;
            	scale.Ranges.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearRange.EndValueProperty">
            <summary>
            Gets or sets the EndValue of the linear range. Used to specify the end value of an linear range. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearRange.EndValue">
            <summary>
            Gets or sets the EndValue of the linear range. Used to specify the end value of an linear range. 
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the EndValue for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	LinearRange range = new LinearRange();
            	range.EndValue = 100;
            	scale.Ranges.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearRange.OffsetProperty">
            <summary>
            Gets or sets the Offset property of the linear range. Used to customize the position of an linear range. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearRange.Offset">
            <summary>
            Gets or sets the Offset of the linear range. Used to customize the position of an linear range. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the Offset for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	LinearRange range = new LinearRange();
            	range.Offset = 0.2;
            	scale.Ranges.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearRange.StartWidthProperty">
            <summary>
            Gets or sets the StartWidth of the linear range. Used to customize the start width of an linear range. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearRange.StartWidth">
            <summary>
            Gets or sets the StartWidth of the linear range. Used to customize the start width of an linear range.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the StartWidth for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	LinearRange range = new LinearRange();
            	range.StartWidth = 10;
            	scale.Ranges.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearRange.EndWidthProperty">
            <summary>
            Gets or sets the EndWidth of the linear range. Used to customize the end width of an linear range. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearRange.EndWidth">
            <summary>
            Gets or sets the EndWidth of the linear range. Used to customize the end width of an linear range.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the EndWidth for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	LinearRange range = new LinearRange();
            	range.EndWidth = 20;
            	scale.Ranges.Add(range);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearRange.GradientStopsProperty">
            <summary>
            Gets or sets the collection of GradientColor in linear range. Used to customize the gradient stop color for linear range. This is a bindable property.        
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearRange.GradientStops">
            <summary>
            Gets or sets the collection of GradientColor in linear range. Used to customize the gradient stop color for linear range. This is a bindable property.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.LinearRange.Syncfusion#XForms#Themes#IThemeElement#OnControlThemeChanged(System.String,System.String)">
            <summary>
            Called when control theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.LinearRange.Syncfusion#XForms#Themes#IThemeElement#OnCommonThemeChanged(System.String,System.String)">
            <summary>
            Called when common theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.LinearRange.OnBindingContextChanged">
            <summary>
            Method ise used to set binding context. 
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.LinearScale">
            <summary>
            Represents the linear scale. To render this scale, create an instance of LinearScale class, and set required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.LinearScale.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.LinearScale"/> class to set required linear scale properties in linear gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.RangesProperty">
            <summary>
            Gets or sets the Ranges property of the linear scale. Range is a visual element, which begins and ends at the specified values within a scale.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.Ranges">
            <summary>
            Gets or sets the Ranges property of the linear scale. Range is a visual element, which begins and ends at the specified values within a scale.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.CustomLabels">
            <summary>
            Gets or sets the custom labels for linear scale. To render this scale, create an instance of CustomLabels class, and set required properties.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.CustomLabelsProperty">
            <summary>
            The custom labels property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.PointersProperty">
            <summary>
            Gets or sets the Pointers property of the linear scale. Pointers are used to mark values. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.Pointers">
            <summary>
            Gets or sets the Pointers property of the linear scale. Pointers are used to mark values. This is a bindable property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.MinimumValueProperty">
            <summary>
            Gets or sets the MinimumValue property of the linear scale. It represents the minimum value of a linear scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.MinimumValue">
            <summary>
            Gets or sets the MinimumValue of linear scale. It represents the minimum value of a linear scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the MinimumValue for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	scale.MinimumValue = 0;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.MaximumLabelsProperty">
            <summary>
            Gets or sets the MaximumLabels property of linear scale. It shows the maximum labels of linear scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.MaximumLabels">
            <summary>
            Gets or sets the MaximumLabels property of linear scale. It shows the maximum labels of linear scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Int32"/> as value. </value>
            <example>
            This sample shows how to set the MaximumLabels for the gauge.
            <code>
            void MyPage()
            {
                SfLinearGauge gauge = new SfLinearGauge();
                LinearScale scale = new LinearScale();
                scale.MaximumLabels = 3;
                gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.ScalePositionProperty">
            <summary>
            The scale position property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.ScalePosition">
            <summary>
            Gets or sets the ScalePosition of linear scale. It shows the scale position of linear scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="P:Syncfusion.SfGauge.XForms.LinearScale.ScalePosition"/> as value. </value>
            <example>
            This sample shows how to set the MinimumValue for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	scale.ScalePosition = ScalePosition.Forward;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.MaximumValueProperty">
            <summary>
            Gets or sets the MaximumValue property of linear scale. It represesnts the scale maximum value. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.MaximumValue">
            <summary>
            Gets or sets the MaximumValue of linear scale. It represesnts the scale maximum value. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the MaximumValue for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	scale.MaximumValue = 100;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.CornerRadius">
            <summary>
            Gets or sets a corner radius value for linear scale to draw the scale with rounded corners in linear gauge.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.CornerRadiusProperty">
            <summary>
            Gets or sets a corner radius property value for linear scale to draw the scale with rounded corners in linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.CornerRadiusType">
            <summary>
            Gets or sets a corner radius to draw the linear scale with rounded corner.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.CornerRadiusTypeProperty">
            <summary>
            Corner radius property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.IntervalProperty">
            <summary>
            Gets or sets the Interval property of the linear scale. The default interval of scale is auto interval. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.Interval">
            <summary>
            Gets or sets the Interval property of the linear scale. The default Interval of scale is auto interval.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the Interval for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	scale.Interval = 10;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.LabelPrefixProperty">
             <summary>
            Gets or sets the LabelPrefix property of the linear scale. It is used to prefix the values to scale labels.
             </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.LabelPrefix">
            <summary>
            Gets or sets the LabelPrefix of linear scale. It is used to prefix the values to scale labels. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.String"/> as value. </value>
            <example>
            This sample shows how to set the LabelPrefix for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	scale.LabelPrefix = "$";
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.LabelPostfixProperty">
            <summary>
            Gets or sets the LabelPostfix property of linear scale. It is used to postfix the values to scale labels.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.LabelPostfix">
            <summary>
            Gets or sets the LabelPostfix of the linear scale. It is used to postfix the values to scale labels. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the LabelPostfix for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	scale.LabelPostfix = "%";
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.ScaleBarColorProperty">
            <summary>
            The scale bar color property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.ScaleBarColor">
            <summary>
            Gets or sets the ScaleBarColor of linear scale. To render this, create an instance of ScaleBarcolor and set required properties. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:Xamarin.Forms.Color"/> as value. </value>
            <example>
            This sample shows how to set the ScaleBarColor for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	scale.ScaleBarColor = Color.Red;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.ScaleBarSizeProperty">
            <summary>
            The scale bar size property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.ScaleBarSize">
            <summary>
            Gets or sets the ScaleBarSize of linear scale. To render this, create an instance of ScaleBarSize and set required properties. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the ScaleBarSize for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	scale.ScaleBarSize = 13;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.LabelFontSizeProperty">
            <summary>
            Gets or sets the LabelFontSize of linear scale. It changes the font of label for linear scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.LabelFontSize">
            <summary>
            Gets or sets the LabelFontSize of linear scale. It is used to change the font of label for linear scale.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the LabelFontSize for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	scale.LabelFontSize = 14;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.ScaleBarLengthProperty">
            <summary>
            The scale bar length property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.ScaleBarLength">
            <summary>
            Gets or sets the ScaleBarLength of linear scale. To render this, create an instance of ScaleBarLength and set required properties. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the ScaleBarLength for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	scale.ScaleBarLength = 100;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.LabelFontProperty">
            <summary>
            Gets or sets the LabelFont property of linear scale. It changes the label font for linear scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.LabelFont">
            <summary>
            Gets or sets the LabelFont property of linear scale. It changes the label font for linear scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:Xamarin.Forms.Font"/> as value. </value>
            <example>
            This sample shows how to set the LabelFont for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	scale.LabelFont = new Font();
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.FontFamilyProperty">
            <summary>
            Gets or sets the font family of the text. It changes the font family of scale text in linear gauge. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.FontFamily">
            <summary>
            Gets or sets the font family of the text. It is used to change the font family of scale text in linear gauge.
            </summary>
            <value>The font family of the text.</value>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.FontAttributesProperty">
            <summary>
            Gets or sets the font attributes for linear scale. It changes the font style for the linear gauge scale. This is bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.FontAttributes">
            <summary>
            Gets or sets the font attributes for linear scale. It is used to change the font style for the linear gauge scale.
            </summary>
            <value>This property takes the <see cref="P:Syncfusion.SfGauge.XForms.LinearScale.FontAttributes"/>value.</value> 
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.LabelColorProperty">
            <summary>
            Gets or sets the LabelColor property of linear scale. It changes the label color for linear scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.LabelColor">
            <summary>
            Gets or sets the LabelColor of linear scale. It changes the label color for linear scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:Xamarin.Forms.Color"/> as value. </value>
            <example>
            This sample shows how to set the LabelColor for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	scale.LabelColor = Color.Red;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.LabelFormatProperty">
            <summary>
            Gets or sets the LabelFormat property of linear scale. It changes the label format for linear scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.LabelFormat">
            <summary>
            Gets or sets the LabelFormat of linear scale. It changes the label format for linear scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.String"/> as value.</value>
            <example>
            This sample shows how to set the LabelFormat for the gauge.
            <code>
            void MyPage()
            {
                SfLinearGauge gauge = new SfLinearGauge();
                LinearScale scale = new LinearScale();
                scale.LabelFormat = "Money:{0:c}";
                gauge.Scales.Add(scale);
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.MinorTicksPerIntervalProperty">
            <summary>
            Gets or sets the MinorTicksPerInterval property of linear scale. The default interval of scale is auto interval.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.MinorTicksPerInterval">
            <summary>
            Gets or sets the MinorTicksPerInterval of linear scale. The default interval property of scale is auto interval. This is bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the MinorTicksPerInterval for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	scale.MinorTicksPerInterval = 3;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.MajorTickSettingsProperty">
            <summary>
            Gets or sets the MajorTickSettings property of linear scale. It customizes the major ticks of a linear scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.MajorTickSettings">
            <summary>
            Gets or sets the MajorTickSettings of linear scale. It customizes the major ticks of a linear scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:Syncfusion.SfGauge.XForms.TickSettings"/> as value. </value>
            <example>
            This sample shows how to set the MajorTickSettings for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	scale.MajorTickSettings = new TickSettings();
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.MinorTickSettingsProperty">
            <summary>
            Gets or sets the MinorTickSettings property of linear scale. It customizes the minor ticks of a linear scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.MinorTickSettings">
            <summary>
            Gets or sets the MinorTickSettings of linear scale. It customizes the minor ticks of a linear scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:Syncfusion.SfGauge.XForms.TickSettings"/> as value. </value>
            <example>
            This sample shows how to set the MinorTickSettings for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	scale.MinorTickSettings = new TickSettings();
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.ShowLabelsProperty">
            <summary>
            The show labels property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.ShowLabels">
            <summary>
            Gets or sets the ShowLabel property. It shows the labels of linear scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Boolean"/> as value. </value>
            <example>
            This sample shows how to set the ShowLabels for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	scale.ShowLabels = true;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.ShowTicksProperty">
            <summary>
            The show ticks property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.ShowTicks">
            <summary>
            Gets or sets the ShowTicks property of linear scale. It shows the ticks of linear scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Boolean"/> as value. </value>
            <example>
            This sample shows how to set the ShowTicks for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	scale.Ticks = true;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.OffsetProperty">
            <summary>
            The offset property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.Offset">
            <summary>
            Gets or sets the Offset of the linear scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the Offset for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	scale.Offset = 0.2;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.CultureProperty">
            <summary>
            Gets or sets the culture value. It changes the culture value of label in linear scale.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.Culture">
            <summary>
            Gets or sets the culture value. It changes the culture value of label in linear scale.
            </summary>
            <value>The default value is CultureInfo.CurrentCulture.</value>
            <example>
            This sample shows how to set the Culture for the label.
            <code>
            void MyPage()
            {
                SfLinearGauge gauge = new SfLinearGauge();
                LinearScale scale = new LinearScale();
                scale.Culture = new System.Globalization.CultureInfo("fr-FR");
                gauge.Scales.Add(scale);
            </code>
            </example> 
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.FrameOffsetProperty">
            <summary>
             Gets or sets the FrameOffset property of linear scale. It changes the frame offset for linear scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.FrameOffset">
            <summary>
            Gets or sets the FrameOffset of linear scale. It changes the frame offset for linear scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the FrameOffset for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	scale.FrameOffset = 0.2;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.LabelOffsetProperty">
            <summary>
            Gets or sets the LabelOffset of linear scale. It changes the offset of label for linear scale. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.LabelOffset">
            <summary>
            Gets or sets the LabelOffset of linear scale. It changes the offset of label for linear scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the LabelOffset for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	scale.LabelOffset = 0.8;
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.OpposedPositionProperty">
            <summary>
            The opposedPosition property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.OpposedPosition">
            <summary>
            Gets or sets the OpposedPosition of the linear scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Boolean"/> as value. </value>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.GradientStopsProperty">
            <summary>
            Gets or sets a collection of the GradientColor properties in linear range. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.GradientStops">
            <summary>
            Gets or sets a collection of the GradientColor properties in linear range. This is a bindable property.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.LinearScale.Syncfusion#XForms#Themes#IThemeElement#OnControlThemeChanged(System.String,System.String)">
            <summary>
            Called when control theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.LinearScale.Syncfusion#XForms#Themes#IThemeElement#OnCommonThemeChanged(System.String,System.String)">
            <summary>
            Called when common theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearScale.ScaleOffset">
            <summary>
            Gets or sets the value of ScaleOffset. It is used to customize the spacing of linear scale.
            </summary>        
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearScale.ScaleOffsetProperty">
            <summary>
            Gets or sets the value of ScaleOffset. This is a bindable property.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.LinearScale.OnBindingContextChanged">
            <summary>
            Method used to binding context.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.LinearTickSettings">
            <summary>
            Represents the linear tick settings. To render this scale, create an instance of LinearTickSettings class, and set required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.LinearTickSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.LinearTickSettings"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearTickSettings.LengthProperty">
            <summary>
            Gets or sets the Length property of linear scale. It customizes the length of ticks. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearTickSettings.Length">
            <summary>
            Gets or sets the Length property of the linear scale. It customizes the length of ticks. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the Length for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	LinearTickSettings ticks = new LinearTickSettings();
            	ticks.Length = 4;
            	scale.MajorTickSettings.Add(ticks);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearTickSettings.ThicknessProperty">
            <summary>
            Gets or sets the Thickness property of linear scale. It customizes the thickness of ticks. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearTickSettings.Thickness">
            <summary>
            Gets or sets the Thickness property of linear scale. It customizes the thickness of ticks. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the Thickness for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	LinearTickSettings ticks = new LinearTickSettings();
            	ticks.Thickness = 4;
            	scale.MajorTickSettings.Add(ticks);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearTickSettings.OffsetProperty">
            <summary>
            Gets or sets the Offset of the linear scale. It specifies the position of linear scale ticks. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearTickSettings.Offset">
            <summary>
            Gets or sets the Offset of the linear scale. It specifies the position of ticks in linear scale. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the Offset for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	LinearTickSettings ticks = new LinearTickSettings();
            	ticks.Offset = 0.4;
            	scale.MajorTickSettings.Add(ticks);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.LinearTickSettings.ColorProperty">
            <summary>
            Gets or sets the Color property of linear scale ticks. It customizes the color of linear scale ticks. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.LinearTickSettings.Color">
            <summary>
            Gets or sets the Color property of linear scale ticks. It customizes the color of linear scale ticks.
            </summary>
            <value>This property takes the <see cref="P:Syncfusion.SfGauge.XForms.LinearTickSettings.Color"/> as value. </value>
            <example>
            This sample shows how to set the Color for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	LinearTickSettings ticks = new LinearTickSettings();
            	ticks.Color = Color.Red;
            	scale.MajorTickSettings.Add(ticks);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.LinearTickSettings.Syncfusion#XForms#Themes#IThemeElement#OnControlThemeChanged(System.String,System.String)">
            <summary>
            Called when control theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.LinearTickSettings.Syncfusion#XForms#Themes#IThemeElement#OnCommonThemeChanged(System.String,System.String)">
            <summary>
            Called when common theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.SfLinearGauge">
            <summary>
            Represents a root class for linear gauge; it is used to add a collection of scales. To render this gauge, create an instance of LinearGauge class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfLinearGauge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.SfLinearGauge"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfLinearGauge.NativeObject">
            <summary>
            Gets or sets the native object.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfLinearGauge.Scales">
            <summary>
            Gets or sets the scales property of linear gauge. It maintains a collection of scales in linear gauge. This is a bindable property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SfLinearGauge.ScalesProperty">
            <summary>
            Gets or sets the scales property of the linear gauge. It maintains a collection of scales in the linear gauge.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfLinearGauge.Header">
            <summary>
            Gets or sets the headers property of the linear gauge. It is used to add a title to linear gauge. This is a bindable property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SfLinearGauge.HeaderProperty">
            <summary>
            Gets or sets the headers property of the linear gauge. It is used to add a title to linear gauge. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfLinearGauge.Annotations">
            <summary>
            Gets or sets the annotations for linear gauge. It is used to mark the specific area of interest in the gauge.
            </summary>
            <value>This property takes the <see cref="T:Syncfusion.SfGauge.XForms.LinearGaugeAnnotationCollection"/> as value. </value>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SfLinearGauge.AnnotationsProperty">
            <summary>
            Gets or sets the annotations for linear gauge. It marks the specific area of interest in the gauge. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfLinearGauge.Orientation">
            <summary>
            Gets or sets the Orientation property of linear gauge. It changes the orientaion to either horizontal or vertical.
            </summary>
            <value>This property takes the <see cref="P:Syncfusion.SfGauge.XForms.SfLinearGauge.Orientation"/> as value. </value>
            <example>
            This sample shows how to set the Orientation for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	gauge.Orientation = Orientation.OrientationHorizontal;
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SfLinearGauge.OrientationProperty">
            <summary>
            Gets or sets the Orientation property of linear gauge. It changes the orientaion to either horizontal or vertical. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SfLinearGauge.Frame">
            <summary>
            Gets or sets the frame of linear gauge. It customizes the frame of a linear gauge. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:Xamarin.Forms.Rectangle"/> as value. </value>
            <example>
            This sample shows how to set the Frame for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	gauge.Frame = new Rectangle();
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SfLinearGauge.FrameProperty">
            <summary>
             Gets or sets the frame property of linear gauge. It customizes the frame of a linear gauge. This is a bindable property.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfLinearGauge.OnBindingContextChanged">
            <summary>
            Method used to set binding context.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfLinearGauge.OnSizeRequest(System.Double,System.Double)">
            <summary>
            Method used to get size fo linear gauge.
            </summary>
            <param name="widthConstraint">Width Constraint.</param>
            <param name="heightConstraint">Height Constraint.</param>
            <returns>Size Request.</returns>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfLinearGauge.Syncfusion#XForms#Themes#IParentThemeElement#GetThemeDictionary">
            <summary>
            .Gets the SfLinearGaugeStyles.
            </summary>
            <returns>ResourceDictionary.</returns>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfLinearGauge.Syncfusion#XForms#Themes#IThemeElement#OnControlThemeChanged(System.String,System.String)">
            <summary>
            Called when control theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfLinearGauge.Syncfusion#XForms#Themes#IThemeElement#OnCommonThemeChanged(System.String,System.String)">
            <summary>
            Called when common theme is changed.
            </summary>
            <param name="oldTheme">Old theme.</param>
            <param name="newTheme">New theme.</param>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.SfLinearGaugeStyles">
            <summary>
            Holds the theme style for the SfLinearGauge control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SfLinearGaugeStyles.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.SfLinearGaugeStyles"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfGauge.XForms.SymbolPointer">
            <summary>
            Represents the symbol pointer. To render this symbol pointer, create an instance of SymbolPointer class and set required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfGauge.XForms.SymbolPointer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfGauge.XForms.SymbolPointer"/> class. Using this instance, customize the symbol pointer by setting required properties.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SymbolPointer.OffsetProperty">
            <summary>
            Gets or sets the offset proeprty of the linear gauge. It customizes the pointer position. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SymbolPointer.Offset">
            <summary>
            Gets or sets the offset of linear gauge. It customizes the pointer position. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the Offset for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	SymbolPointer pointer = new SymbolPointer();
            	pointer.Offset = 0.4;
            	scale.Pointers.Add(pointer);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SymbolPointer.SymbolPointerPositionProperty">
            <summary>
            Gets or sets the symbolpointer position property of linear gauge. It customizes the symbol pointer position. This is a bindable property.
            </summary>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SymbolPointer.SymbolPointerPosition">
            <summary>
            Gets or sets the symbolpointer position of linear gauge. It customizes the symbol pointer position. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the symbolpointer position for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	SymbolPointer pointer = new SymbolPointer();
            	pointer.SymbolPointerPosition = SymbolPointerPoisition.Away;
            	scale.Pointers.Add(pointer);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SymbolPointer.LengthFactorProperty">
            <summary>
            Gets or sets the length factor property of pointer. It sets the length factor for pointer. This is a bindable property.
            </summary> 
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SymbolPointer.LengthFactor">
            <summary>
            Gets or sets the length factor property of symbol pointer. It sets the lenght factor for pointer. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="T:System.Double"/> as value. </value>
            <example>
            This sample shows how to set the LengthFactor for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	SymbolPointer pointer = new SymbolPointer();
            	pointer.LengthFactor= 0.4;
            	scale.Pointers.Add(pointer);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SymbolPointer.MarkerShapeProperty">
            <summary>
            Gets or sets the marker shape property of symbol pointer. It customizes the marker shapes for pointer. This is a bindable property.
            </summary> 
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SymbolPointer.MarkerShape">
            <summary>
            Gets or sets the marker shape symbol pointer. It customizes the marker shapes for pointer. This is a bindable property.
            </summary>
            <value>This property takes the <see cref="P:Syncfusion.SfGauge.XForms.SymbolPointer.MarkerShape"/> as value. </value>
            <example>
            This sample shows how to set the LengthFactor for the gauge.
            <code>
            void MyPage()
            {
            	SfLinearGauge gauge = new SfLinearGauge();
            	LinearScale scale = new LinearScale();
            	SymbolPointer pointer = new SymbolPointer();
            	pointer.MarkerShape= MarkerShape.Triangle;
            	scale.Pointers.Add(pointer);
            	gauge.Scales.Add(scale);
            }
            </code> 
            </example>
        </member>
        <member name="P:Syncfusion.SfGauge.XForms.SymbolPointer.ImageSource">
            <summary>
            Gets or sets the source path for image symbol. It sets the source path for image. This is a bindable property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfGauge.XForms.SymbolPointer.ImageSourceProperty">
            <summary>
            Gets or sets the source path property for image symbol. It sets the source path for image. This is a bindable property.
            </summary>
        </member>
    </members>
</doc>
